version: 2
jobs:
  build:
    docker:
      - image: circleci/rust:latest

    working_directory: ~/yamlette

    steps:
      - checkout

      - run: rustc -vV
      - run: cargo -vV
      - run: cargo build --verbose
      - run: cargo test -- --jobs=1 --test-threads=1 --verbose --features test_reader
      - run: cargo test -- --jobs=1 --test-threads=1 --verbose --features test_savant
      - run: cargo test -- --jobs=1 --test-threads=1 --verbose --features test_sage
      - run: cargo test -- --jobs=1 --test-threads=1 --verbose --features test_book
      - run: cargo test -- --jobs=1 --test-threads=1 --verbose --features test_orchestra
      - run: cargo test -- --jobs=1 --test-threads=1 --verbose --features test_face

# version: 2
# jobs:
#   build:
#     machine: true
#
#     working_directory: ~/yamlette
#
#     steps:
#       - run: sudo killall -9 apt-get || true && sudo apt-get -y update && sudo apt-get -y install git curl gcc
#       - checkout
#       - run: git submodule sync && git submodule update --init
#
#       - run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
#       - run: echo 'export PATH="$PATH:$HOME/.cargo/bin"' >> ~/.bashrc && . ~/.bashrc
#
#       - run: . ~/.bashrc && rustc -vV
#       - run: . ~/.bashrc && cargo -vV
#       - run: . ~/.bashrc && cargo build --verbose
#       - run: . ~/.bashrc && cargo test --verbose --features test_reader
#       - run: . ~/.bashrc && cargo test --verbose --features test_savant
#       - run: . ~/.bashrc && cargo test --verbose --features test_sage
#       - run: . ~/.bashrc && cargo test --verbose --features test_book
#       - run: . ~/.bashrc && cargo test --verbose --features test_orchestra
#       - run: . ~/.bashrc && cargo test --verbose --features test_face
